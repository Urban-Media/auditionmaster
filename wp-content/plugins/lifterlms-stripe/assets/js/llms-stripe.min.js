!function(e){var t=window.llms_stripe||{},l=Stripe(t.publishable_key),r=l.elements(t.settings.elements).create("card",t.settings.card);t.bind=function(){var t=this;window.llms.checkout.add_before_submit_event({data:t,handler:t.submit}),e("#llms-stripe-card-element").length&&t.mount_card(),e("#llms_stripe_saved_card_id").on("change",function(){var l=e(this).val(),s=e("#llms_stripe_card_id");"create-new"===l?(s.val(""),r.mount("#llms-stripe-card-element"),t.toggle_submit(!1)):(s.val(l),r.unmount(),t.toggle_submit(!0))}),e("#llms_billing_zip").on("blur",function(){r.update({value:{postalCode:e("#llms_billing_zip").val()}})}).trigger("blur"),e("#llms_stripe_saved_card_id").trigger("change"),e(".llms-payment-gateways").on("llms-gateway-selected",function(l,s){"stripe"===s.id&&(r._complete?t.toggle_submit(!0):t.toggle_submit(!1),e("#llms_stripe_saved_card_id").trigger("change"),"create-new"!==e("#llms_stripe_saved_card_id").val()&&r.focus())})},t.mount_card=function(){r.mount("#llms-stripe-card-element"),r.addEventListener("change",function(e){e.error?t.set_error(e.error.message):t.set_error(""),e.complete?t.toggle_submit(!0):t.toggle_submit(!1)})},t.toggle_submit=function(t){var l=e("#llms_create_pending_order, #llms_save_payment_method");t?l.removeAttr("disabled"):l.attr("disabled","disabled")},t.get_token=function(e){l.createToken(r).then(function(t){t.error?e(null,t.error):e(t.token)})},t.is_selected=function(){return e("#llms_payment_gateway_stripe").is(":checked")},t.set_error=function(e){document.getElementById("llms-stripe-card-errors").textContent=e},t.submit=function(l,r){var s=e("#llms_stripe_saved_card_id"),n=(e(this),!0);l.is_selected()?s.length&&"create-new"!==s.val()?r(n):t.get_token(function(t,l){t?t&&(e("#llms_stripe_token").val(t.id),e("#llms_stripe_card_id").val(t.card.id)):n=l.message,r(n)}):r(n)},window.llms.checkout.add_gateway(t),t.bind()}(jQuery);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
